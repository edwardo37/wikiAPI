// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wikiAPI.Repositories;

#nullable disable

namespace wikiAPI.Migrations
{
    [DbContext(typeof(WikiDbContext))]
    partial class WikiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("wikiAPI.Models.WikiCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WikiCategories");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiEntry", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WikiCategoryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WikiCategoryID");

                    b.ToTable("WikiEntries");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiSection", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.PrimitiveCollection<string>("Bodies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiEntryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WikiEntryID");

                    b.ToTable("WikiSection");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiStat", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Val")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WikiEntryID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WikiEntryID");

                    b.ToTable("WikiStat");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiEntry", b =>
                {
                    b.HasOne("wikiAPI.Models.WikiCategory", "WikiCategory")
                        .WithMany("WikiEntries")
                        .HasForeignKey("WikiCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WikiCategory");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiSection", b =>
                {
                    b.HasOne("wikiAPI.Models.WikiEntry", null)
                        .WithMany("Sections")
                        .HasForeignKey("WikiEntryID");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiStat", b =>
                {
                    b.HasOne("wikiAPI.Models.WikiEntry", null)
                        .WithMany("Stats")
                        .HasForeignKey("WikiEntryID");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiCategory", b =>
                {
                    b.Navigation("WikiEntries");
                });

            modelBuilder.Entity("wikiAPI.Models.WikiEntry", b =>
                {
                    b.Navigation("Sections");

                    b.Navigation("Stats");
                });
#pragma warning restore 612, 618
        }
    }
}
